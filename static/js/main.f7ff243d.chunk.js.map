{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","items","first","last","numberOfPages","i","Math","ceil","push","className","classNames","disabled","href","onClick","map","numberOfPage","active","length","slice","item","from","to","numbers","n","getNumbers","App","useState","setPerPage","page","setPage","totalNumber","lastNumber","firstNumber","id","value","onChange","event","target","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"oNAaaA,EAA8B,SAAC,GAW1C,IAHK,IAPLC,EAOI,EAPJA,MACAC,EAMI,EANJA,QACAC,EAKI,EALJA,YACAC,EAII,EAJJA,aACAC,EAGI,EAHJA,MACAC,EAEI,EAFJA,MACAC,EACI,EADJA,KAEMC,EAA0B,GAEvBC,EAAI,EAAGA,GAAKC,KAAKC,KAAKV,EAAQC,GAAUO,GAAK,EACpDD,EAAcI,KAAKH,GAGrB,OACE,qCACE,qBAAII,UAAU,aAAd,UACE,oBAAIA,UAAU,YAAd,SACE,mBACE,UAAQ,WACRA,UAAWC,IACT,YACA,CAAEC,SAA0B,IAAhBZ,IAEda,KAAK,QACL,gBAA+B,IAAhBb,EACfc,QAAS,WACa,IAAhBd,GACFC,EAAaD,EAAc,IAVjC,oBAiBDK,EAAcU,KAAI,SAAAC,GAAY,OAC7B,oBACEN,UAAWC,IACT,YACA,CAAEM,OAAQjB,IAAgBgB,IAH9B,SAOE,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMb,EAAae,IAJ9B,SAMGA,KAREA,MAYT,oBAAIN,UAAU,YAAd,SACE,mBACE,UAAQ,WACRA,UAAWC,IACT,YACA,CAAEC,SAAUZ,IAAgBK,EAAca,SAE5CL,KAAK,QACL,gBAAeb,IAAgBK,EAAca,OAC7CJ,QAAS,WACHd,IAAgBK,EAAca,QAChCjB,EAAaD,EAAc,IAVjC,uBAkBJ,6BACGE,EAAMiB,MAAMhB,EAAQ,EAAGC,GAAMW,KAAI,SAAAK,GAAI,OACpC,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,YCnFXlB,ECNC,SAAoBmB,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQd,KAAKe,GAGf,OAAOD,EDDKE,CAAW,EAAG,IACzBV,KAAI,SAAAS,GAAC,qBAAYA,MAEPE,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAO5B,EAAP,KAAgB6B,EAAhB,KACA,EAAwBD,mBAAS,GAAjC,mBAAOE,EAAP,KAAaC,EAAb,KAOMC,EAAc7B,EAAMgB,OACpBc,EAAajC,EAAU8B,EACvBI,EAAcD,EAAajC,EAAU,EAE3C,OACE,sBAAKW,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWmB,EADX,mBAC0BI,EAD1B,cAC2CD,EAD3C,eAC4DD,EAD5D,OAIA,sBAAKrB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRwB,GAAG,kBACHxB,UAAU,eACVyB,MAAOpC,EACPqC,SAxBW,SAACC,GACpBT,GAAYS,EAAMC,OAAOH,OACzBL,EAAQ,IAiBF,UAOE,wBAAQK,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkB7B,UAAU,qBAA3C,+BAIF,cAAC,EAAD,CACEZ,MAAOiC,EACPhC,QAASA,EACTC,YAAa6B,EACb5B,aAAc6B,EACd5B,MAAOA,EACPC,MAAO8B,EACP7B,KAAM4B,QEtDdQ,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.f7ff243d.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n  items: string [],\n  first: number,\n  last: number\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n  items,\n  first,\n  last,\n}) => {\n  const numberOfPages: number[] = [];\n\n  for (let i = 1; i <= Math.ceil(total / perPage); i += 1) {\n    numberOfPages.push(i);\n  }\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className=\"page-item\">\n          <a\n            data-cy=\"prevLink\"\n            className={classNames(\n              'page-link',\n              { disabled: currentPage === 1 },\n            )}\n            href=\"#prev\"\n            aria-disabled={currentPage === 1}\n            onClick={() => {\n              if (currentPage !== 1) {\n                onPageChange(currentPage - 1);\n              }\n            }}\n          >\n            «\n          </a>\n        </li>\n        {numberOfPages.map(numberOfPage => (\n          <li\n            className={classNames(\n              'page-item',\n              { active: currentPage === numberOfPage },\n            )}\n            key={numberOfPage}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${numberOfPage}`}\n              onClick={() => onPageChange(numberOfPage)}\n            >\n              {numberOfPage}\n            </a>\n          </li>\n        ))}\n        <li className=\"page-item\">\n          <a\n            data-cy=\"nextLink\"\n            className={classNames(\n              'page-link',\n              { disabled: currentPage === numberOfPages.length },\n            )}\n            href=\"#next\"\n            aria-disabled={currentPage === numberOfPages.length}\n            onClick={() => {\n              if (currentPage !== numberOfPages.length) {\n                onPageChange(currentPage + 1);\n              }\n            }}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {items.slice(first - 1, last).map(item => (\n          <li\n            key={item}\n            data-cy=\"item\"\n          >\n            {item}\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [page, setPage] = useState(1);\n\n  const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(+event.target.value);\n    setPage(1);\n  };\n\n  const totalNumber = items.length;\n  const lastNumber = perPage * page;\n  const firstNumber = lastNumber - perPage + 1;\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${page} (items ${firstNumber} - ${lastNumber} of ${totalNumber})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handleChange}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n      <Pagination\n        total={totalNumber}\n        perPage={perPage}\n        currentPage={page}\n        onPageChange={setPage}\n        items={items}\n        first={firstNumber}\n        last={lastNumber}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}